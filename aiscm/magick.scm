(define-module (aiscm magick)
  #:use-module (oop goops)
  #:use-module (aiscm mem)
  #:use-module (aiscm element)
  #:use-module (aiscm pointer)
  #:use-module (aiscm rgb)
  #:use-module (aiscm sequence)
  #:use-module (aiscm image)
  #:export (read-image write-image))
(load-extension "libguile-magick" "init_magick")
(define (read-image file-name)
  (let [(picture (magick-read-image file-name))]
    (make <image>
          #:format (car picture)
          #:shape (cadr picture)
          #:mem (make <mem> #:base (caddr picture) #:size (cadddr picture)))))
(define (write-image img file-name)
  (let* [(format    (if (eq? (get-format img) 'GRAY) 'GRAY 'BGRA))
         (converted (convert img format))]
    (magick-write-image format (shape converted) (get-memory (get-mem converted)) file-name)
    img))
