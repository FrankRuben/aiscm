(use-modules (aiscm obj)
             (aiscm element)
             (aiscm int)
             (oop goops)
             (system foreign)
             (guile-tap))
(define obj (make <obj> #:value 'sym))
(define address (pointer-address (scm->pointer 'sym)))
(ok (equal? (list address) (content 'sym))
    "content of symbol returns internal 64 bit representation")
(ok (equal? (list (pointer-address (scm->pointer 42))) (content <obj> 42))
    "content of integer forced to object returns correct SCM address")
(ok (equal? (make <obj> #:value 'sym) (build <obj> address))
    "build SCM value")
(run-tests)
