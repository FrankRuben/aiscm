(use-modules (oop goops)
             (aiscm compile)
             (aiscm element)
             (aiscm int)
             (guile-tap))
(define i (make <int> #:value 2))
(define j (make <int> #:value 3))
(ok (equal? '(i 2) (expr->params '(+ i 2)))
    "get parameters of '(+ i 2)")
(ok (equal? '(i j k) (expr->params '(+ i (* j k))))
    "get parameters of '(+ i (* j k))")
(ok (equal? '<+_?_?> (expr->descr '(+ i 2)))
    "get descriptor of '(+ i 2)")
(ok (equal? '<+_?_<*_?_?>> (expr->descr '(+ i (* j k))))
    "get descriptor of '(+ i (* j k))")
(ok (equal? '(<+_?_<*_?_?>> i j k) (expr->call '(+ i (* j k))))
    "convert expression to method call")
(ok (eqv? 3 (length (expr->temps '(+ i (* j k)))))
    "check number of temporaries")
(ok (equal? 'define-method (car (expr->method '(+ i j))))
    "expr->method creates method definition")
(ok (equal? (expr->descr '(+ i j)) (caadr (expr->method '(+ i j))))
    "expr->method uses descriptor as method name")
(ok (eqv? 5 (get (comp (+ i j))))
    "compiling method generates and calls it")
(run-tests)
